// <auto-generated />
using System;
using Infrastructure.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Infrastructure.Migrations
{
    [DbContext(typeof(MotelDbContext))]
    [Migration("20210531101859_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.12")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Infrastructure.Models.Customer", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("(newid())");

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(256)")
                        .HasComment("客戶住址")
                        .HasMaxLength(256);

                    b.Property<int>("Gender")
                        .HasColumnType("int")
                        .HasComment("性別");

                    b.Property<string>("IdentityNum")
                        .IsRequired()
                        .HasColumnType("varchar(10)")
                        .HasComment("身份證字號")
                        .HasMaxLength(10)
                        .IsUnicode(false);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(10)")
                        .HasComment("客戶姓名")
                        .HasMaxLength(10);

                    b.Property<DateTime>("SysDate")
                        .HasColumnType("datetime")
                        .HasComment("系統日期");

                    b.Property<string>("Tel")
                        .IsRequired()
                        .HasColumnType("varchar(20)")
                        .HasComment("客戶電話")
                        .HasMaxLength(20)
                        .IsUnicode(false);

                    b.HasKey("Id");

                    b.ToTable("Customer");
                });

            modelBuilder.Entity("Infrastructure.Models.OccupiedRoom", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CheckInDate")
                        .HasColumnType("datetime")
                        .HasComment("實際入住時間");

                    b.Property<DateTime?>("CheckOutDate")
                        .HasColumnType("datetime")
                        .HasComment("實際退房時間");

                    b.Property<Guid>("CustomerId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int?>("Pay")
                        .HasColumnType("int")
                        .HasComment("結算金額");

                    b.Property<Guid>("RoomId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("SysDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(sysdatetime())")
                        .HasComment("系統日期");

                    b.HasKey("Id");

                    b.HasIndex("CustomerId");

                    b.HasIndex("RoomId");

                    b.ToTable("OccupiedRoom");
                });

            modelBuilder.Entity("Infrastructure.Models.Reservation", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("(newid())");

                    b.Property<DateTime>("BeginDate")
                        .HasColumnType("datetime")
                        .HasComment("預訂入住日期");

                    b.Property<Guid>("CustomerId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Days")
                        .HasColumnType("int")
                        .HasComment("天數");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime")
                        .HasComment("預訂退房時間");

                    b.Property<int>("Expense")
                        .HasColumnType("int")
                        .HasComment("住宿費");

                    b.Property<Guid>("RoomId")
                        .HasColumnType("uniqueidentifier")
                        .HasComment("");

                    b.Property<DateTime>("SysDate")
                        .HasColumnType("datetime")
                        .HasComment("系統日期");

                    b.HasKey("Id");

                    b.HasIndex("CustomerId");

                    b.HasIndex("RoomId");

                    b.ToTable("Reservation");
                });

            modelBuilder.Entity("Infrastructure.Models.Room", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("(newid())");

                    b.Property<string>("Describe")
                        .HasColumnType("nvarchar(50)")
                        .HasComment("房間位置")
                        .HasMaxLength(50);

                    b.Property<string>("Position")
                        .HasColumnType("nvarchar(50)")
                        .HasComment("房間描述")
                        .HasMaxLength(50);

                    b.Property<string>("RoomNumber")
                        .IsRequired()
                        .HasColumnType("varchar(10)")
                        .HasComment("房間號碼")
                        .HasMaxLength(10)
                        .IsUnicode(false);

                    b.Property<Guid>("RoomTypeId")
                        .HasColumnType("uniqueidentifier")
                        .HasComment("指定房屋類別");

                    b.Property<DateTime>("SysDate")
                        .HasColumnType("datetime")
                        .HasComment("系統日期");

                    b.HasKey("Id");

                    b.HasIndex("RoomTypeId");

                    b.ToTable("Room");
                });

            modelBuilder.Entity("Infrastructure.Models.RoomState", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("StateType")
                        .HasColumnType("int")
                        .HasComment("房間狀態");

                    b.HasKey("Id");

                    b.ToTable("RoomState");
                });

            modelBuilder.Entity("Infrastructure.Models.RoomType", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("(newid())");

                    b.Property<bool>("AirCondition")
                        .HasColumnType("bit")
                        .HasComment("是否有空調");

                    b.Property<double>("Area")
                        .HasColumnType("float")
                        .HasComment("房間面積");

                    b.Property<int>("BedQuantity")
                        .HasColumnType("int")
                        .HasComment("配備床數");

                    b.Property<int>("Hprice")
                        .HasColumnName("HPrice")
                        .HasColumnType("int")
                        .HasComment("假日價");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(20)")
                        .HasComment("類型名稱")
                        .HasMaxLength(20);

                    b.Property<int>("Price")
                        .HasColumnType("int")
                        .HasComment("平日價");

                    b.Property<DateTime>("SysDate")
                        .HasColumnType("datetime")
                        .HasComment("系統日期");

                    b.Property<bool>("Tv")
                        .HasColumnName("TV")
                        .HasColumnType("bit")
                        .HasComment("是否有電視");

                    b.HasKey("Id");

                    b.ToTable("RoomType");
                });

            modelBuilder.Entity("Infrastructure.Models.User", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("varchar(10)")
                        .HasComment("使用者名稱")
                        .HasMaxLength(10)
                        .IsUnicode(false);

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasComment("地址")
                        .HasMaxLength(50);

                    b.Property<string>("Department")
                        .HasColumnType("nvarchar(50)")
                        .HasComment("工作部門")
                        .HasMaxLength(50);

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("varchar(30)")
                        .HasComment("電子郵件")
                        .HasMaxLength(30)
                        .IsUnicode(false);

                    b.Property<int>("Gender")
                        .HasColumnType("int")
                        .HasComment("性別");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(10)")
                        .HasComment("員工姓名")
                        .HasMaxLength(10);

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("varchar(20)")
                        .HasComment("密碼")
                        .HasMaxLength(20)
                        .IsUnicode(false);

                    b.Property<int>("Power")
                        .HasColumnType("int")
                        .HasComment("員工類型");

                    b.Property<string>("Tel")
                        .IsRequired()
                        .HasColumnType("varchar(20)")
                        .HasComment("員工電話")
                        .HasMaxLength(20)
                        .IsUnicode(false);

                    b.HasKey("UserId");

                    b.ToTable("User");
                });

            modelBuilder.Entity("Infrastructure.Models.OccupiedRoom", b =>
                {
                    b.HasOne("Infrastructure.Models.Customer", "Customer")
                        .WithMany("OccupiedRoom")
                        .HasForeignKey("CustomerId")
                        .HasConstraintName("FK_Occupy_Customer")
                        .IsRequired();

                    b.HasOne("Infrastructure.Models.Reservation", "Reservation")
                        .WithOne("OccupiedRoom")
                        .HasForeignKey("Infrastructure.Models.OccupiedRoom", "Id")
                        .HasConstraintName("FK_OccupiedRoom_Reservation")
                        .IsRequired();

                    b.HasOne("Infrastructure.Models.Room", "Room")
                        .WithMany("OccupiedRoom")
                        .HasForeignKey("RoomId")
                        .HasConstraintName("FK_OccupiedRoom_Room")
                        .IsRequired();
                });

            modelBuilder.Entity("Infrastructure.Models.Reservation", b =>
                {
                    b.HasOne("Infrastructure.Models.Customer", "Customer")
                        .WithMany("Reservation")
                        .HasForeignKey("CustomerId")
                        .HasConstraintName("FK_Reservation_Customer")
                        .IsRequired();

                    b.HasOne("Infrastructure.Models.Room", "Room")
                        .WithMany("Reservation")
                        .HasForeignKey("RoomId")
                        .HasConstraintName("FK_Reservation_Room")
                        .IsRequired();
                });

            modelBuilder.Entity("Infrastructure.Models.Room", b =>
                {
                    b.HasOne("Infrastructure.Models.RoomType", "RoomType")
                        .WithMany("Room")
                        .HasForeignKey("RoomTypeId")
                        .HasConstraintName("FK_Room_RoomType")
                        .IsRequired();
                });

            modelBuilder.Entity("Infrastructure.Models.RoomState", b =>
                {
                    b.HasOne("Infrastructure.Models.Room", "Room")
                        .WithOne("RoomState")
                        .HasForeignKey("Infrastructure.Models.RoomState", "Id")
                        .HasConstraintName("FK_RoomState_Room")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
